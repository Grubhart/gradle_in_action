
ext.versionFile = file('project-version.properties')

task loadVersion(description: 'load Property file'){
    project.version=readversion()
}

ProjectVersion readversion(){

    logger.quiet 'Reading the version File'

    if (!versionFile.exists()){
        throw new GradleException("Required version File not exist  $versionFile.cannonicalPath")
    }

    Properties properties = new Properties()

    versionFile.withInputStream{ stream ->
        properties.load(stream)
    }

    new ProjectVersion(properties.major.toInteger(),properties.minor.toInteger(),properties.release.toBoolean())
}



class ProjectVersion{

    Integer maj
    Integer min
    Boolean prodReady

    ProjectVersion(Integer maj, Integer min) {
        this.maj = maj
        this.min = min
        this.prodReady = false
    }

    ProjectVersion(Integer maj, Integer min, Boolean prodReady) {
        this(maj,min)
        this.prodReady = prodReady
    }

    @Override
    String toString(){
        "$maj.$min${prodReady?'' : '-SNAPSHOT'}"
    }
}


class ReleaseVersionTask extends DefaultTask {

    @Input Boolean Release
    @OutputFile File destFile

    ReleaseVersionTask() {

        group='versioning'
        description='Makes Project a Release version'


    }

    @TaskAction
    void start(){

        project.version.release = true
        ant.propertyfile(file: destFile) {
            entry(key: 'release', type: 'string', operation: '=', value: 'true')
        }

    }
}

task printVersion << {
    logger.quiet "Version: $version"
}

task makeReleaseVersion(type: ReleaseVersionTask){
    release=version.prodReady
    destFile=file('project-version.properties')
}